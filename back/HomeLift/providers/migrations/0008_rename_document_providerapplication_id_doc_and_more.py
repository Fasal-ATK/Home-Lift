# Generated by Django 5.2.4 on 2025-09-02 22:28

import cloudinary.models
import django.db.models.deletion
import providers.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('providers', '0007_providerapplication_document_type_and_more'),
        ('services', '0003_rename_servicecategory_category'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RenameField(
            model_name='providerapplication',
            old_name='document',
            new_name='id_doc',
        ),
        migrations.AddField(
            model_name='providerapplication',
            name='expiration_date',
            field=models.DateTimeField(default=providers.models.default_expiration, help_text='Temporary applications expire automatically'),
        ),
        migrations.AddField(
            model_name='providerdetails',
            name='approved_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='providerdetails',
            name='approved_by',
            field=models.ForeignKey(blank=True, help_text='Admin who approved the provider', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_providers', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='providerservice',
            name='doc',
            field=cloudinary.models.CloudinaryField(blank=True, help_text='Optional service verification document', max_length=255, null=True, verbose_name='raw'),
        ),
        migrations.CreateModel(
            name='ProviderApplicationService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_doc', cloudinary.models.CloudinaryField(blank=True, help_text='Optional service verification document', max_length=255, null=True, verbose_name='raw')),
                ('price', models.DecimalField(blank=True, decimal_places=2, help_text='Optional price; if empty, will use default service price', max_digits=10, null=True)),
                ('experience_years', models.PositiveIntegerField(default=0)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='providers.providerapplication')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.service')),
            ],
            options={
                'verbose_name': 'Provider Application Service',
                'verbose_name_plural': 'Provider Application Services',
                'unique_together': {('application', 'service')},
            },
        ),
    ]
